# 智能发布系统

## 核心运行时组件（7个）

### 1. 主服务程序 (API 服务)
- **职责**: 接收部署请求，协调发布流程，管理状态和版本信息

### 2. AI 模型服务 (MCP 服务)
- **职责**: 接收告警，通过 MCP 访问多个数据源（Prometheus、GitHub 等），分析 RED 指标，生成诊断报告

### 3. Prometheus (指标采集)
- **职责**: 采集指标，评估告警规则，触发通知

### 4. 发布执行器
- **职责**: 接收部署指令，通过 SSH 执行部署脚本和回滚

### 5. 发布设备
- **职责**: 运行业务服务进程，执行部署指令

### 6. 业务服务进程
- **职责**: 运行业务逻辑，向 Prometheus 暴露指标

### 7. AlertManager
- **职责**: 接收告警，发送回调通知

## 核心流程

### 1. 部署流程
用户请求 → 主服务程序 → 发布执行器 → SSH → 发布设备 → 业务服务进程启动 → Prometheus 采集

### 2. 告警诊断流程
业务服务异常 → Prometheus 告警 → 主服务程序 → AI 调用多个 MCP（Prometheus、GitHub 等）分析 → 生成诊断报告

### 3. 回滚流程
告警触发 → 主服务程序 → 发布执行器 → 发布设备回滚 → 恢复旧版本

## 网络连接关系

1. **主服务程序** <--> **发布执行器** (内部调用)
2. **发布执行器** --> **发布设备** (SSH)
3. **业务服务** --> **Prometheus** (HTTP 指标上报)
4. **Prometheus** --> **AlertManager** (告警推送)
5. **AlertManager** --> **主服务程序** (Webhook)
6. **主服务程序** <--> **AI 模型服务** (HTTP API)
7. **AI 模型** --> **Prometheus MCP** + **GitHub MCP** + **其他 MCP** (MCP 协议)


## 架构图
```
 ┌─────────────────────────────────────────────────────────────────┐
 │                          主服务程序                               │
 │                    (Go-Zero API Server)                          │
 │                      Port: 8888                                  │
 │  ┌──────────────┐         ┌──────────────┐                      │
 │  │ 发布管理器     │  <-->   │ 发布执行器    │                      │
 │  │              │         │  (Ansible)   │                      │
 │  └──────────────┘         └───────┬───────┘                      │
 └───────────────────────────────────┼───────────────────────────────┘
                                     │ SSH
                                     ▼
 ┌───────────────────────────┐       ┌──────────────────────────┐
 │    AI 模型服务             │       │      发布设备 1           │
 │                           │       │       (物理机)           │
 │  ┌─────────────────────┐  │       │  ┌────────────────────┐  │
 │  │  AI 分析引擎         │  │       │  │ 业务服务进程 1      │  │
 │  │  (Claude/GPT)       │  │       │  │  (App Instance)    │  │
 │  └─────────────────────┘  │       │  └────────────────────┘  │
 └──────────┬─────────┬──────┘       └──────────┬───────────────┘
            │        MCP                         │ 指标上报
            │         │                         ▼
            │         │            ┌──────────────────────────┐
            │         │            │  指标采集系统              │
            │         │───────────>│  (Prometheus)            │
            │                      │  Port: 9090              │
            │                      └──────────┬───────────────┘
            │                                  │
            │                                  ▼
            │                      ┌──────────────────────────┐
            │                      │  告警系统                 │
            │                      │  (AlertManager)          │
            │                      └──────────────────────────┘
            │                                  │ Webhook
            │                                  ▼
            │                      ┌──────────────────────────┐
            │                      │      主服务程序            │
            └──────────────────────┴──────────────────────────┘
```

### 关键特点：
1. 主服务程序在中心，协调所有流程
2. AI 通过 MCP 协议同时访问多个数据源（Prometheus、GitHub 等）